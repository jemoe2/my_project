---
name: DeepSource Analysis
on:
  push:
    branches:
      - main
  pull_request: null
jobs:
  analyze:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install DeepSource CLI (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: >
          $installDir = "C:\deepsource_cli"

          New-Item -Path $installDir -ItemType Directory -Force

          Invoke-WebRequest -Uri "https://deepsource.io/cli/windows/deepsource.exe" -OutFile "$installDir\deepsource.exe"

          echo "$installDir" | Out-File -FilePath $env:GITHUB_PATH -Append
      - name: Install DeepSource CLI (Ubuntu)
        if: runner.os == 'Linux'
        shell: bash
        run: >
          sudo curl -L https://deepsource.io/cli/linux/deepsource -o
          /usr/local/bin/deepsource

          sudo chmod +x /usr/local/bin/deepsource
      - name: Validate Config File (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: >
          if (-not (Test-Path ".deepsource.toml")) {
            Write-Error "❌ ملف .deepsource.toml غير موجود!"
            exit 1
          }

          C:\deepsource_cli\deepsource.exe config validate --config-file .deepsource.toml
      - name: Validate Config File (Ubuntu)
        if: runner.os == 'Linux'
        shell: bash
        run: |
          if [ ! -f ".deepsource.toml" ]; then
            echo "❌ ملف .deepsource.toml غير موجود!"
            exit 1
          fi
          deepsource config validate --config-file .deepsource.toml

      - name: Run Analysis (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: C:\deepsource_cli\deepsource.exe report --config-file .deepsource.toml
        env:
          DEEPSOURCE_DSN: ${{ secrets.DEEPSOURCE_DSN || '' }}
      - name: Run Analysis (Ubuntu)
        if: runner.os == 'Linux'
        shell: bash
        run: deepsource report --config-file .deepsource.toml
        env:
          DEEPSOURCE_DSN: ${{ secrets.DEEPSOURCE_DSN }}
