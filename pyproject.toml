[build-system]
requires = ["setuptools>=68.2.2", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "my_project"
version = "1.0.0"
description = "Professional Python Project"
authors = [{name = "Your Name", email = "your.email@example.com"}]
readme = "README.md"
requires-python = ">=3.10"
license = {text = "MIT"}
keywords = ["professional", "optimized", "python"]
classifiers = [
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

[tool.ruff]
line-length = 120
target-version = "py310"
exclude = [
    "**/.git", "**/.github", "**/.mypy_cache", "**/.ruff_cache",
    "**/build", "**/dist", "**/migrations", "**/venv", "**/__pycache__"
]

[tool.ruff.lint]
select = [
    "E", "W", "F", "C", "B", "I", "UP", "PL", "A", "DTZ",
    "D", "N", "SIM", "TCH", "S", "RUF", "PD", "ERA", "PLR", "TRY", "PERF"
]
ignore = ["D203", "D212", "PLR0913", "S101", "PLW0603", "EM101"]
unfixable = ["B904", "RUF009"]

[tool.ruff.lint.isort]
known-first-party = ["my_project"]
required-imports = ["from __future__ import annotations"]
combine-as-imports = true
force-sort-within-sections = true

[tool.ruff.lint.flake8-bugbear]
extend-immutable-calls = ["custom_immutable_function"]

[tool.ruff.lint.pylint]
max-args = 5
max-branches = 12
max-returns = 3
max-statements = 30

[tool.black]
line-length = 120
target-version = ["py310"]
preview = true
include = '\\.pyi?$'
extend-exclude = '''
/(
    \.git
  | __pycache__
  | build
  | dist
)/
'''

[tool.mypy]
strict = true
check_untyped_defs = true
disallow_any_generics = true
warn_redundant_casts = true
warn_unused_ignores = true
show_error_codes = true
enable_error_code = ["ignore-without-code", "redundant-expr"]

[tool.pytest.ini_options]
addopts = "--cov=my_project --cov-report=term-missing --cov-fail-under=90"
testpaths = ["tests"]
python_files = "test_*.py"

[tool.commitizen]
name = "cz_conventional_commits"
version = "1.0.0"
tag_format = "v$version"

[tool.pylint.MESSAGES_CONTROL]
disable = "import-error"

[tool.pre-commit]
repos = [
  { repo = "https://github.com/pre-commit/pre-commit-hooks", rev = "v5.0.0", hooks = [
      { id = "check-added-large-files" },
      { id = "check-yaml" },
      { id = "end-of-file-fixer" },
      { id = "trailing-whitespace" },
      { id = "check-merge-conflict" }
  ] },
  { repo = "https://github.com/astral-sh/ruff-pre-commit", rev = "v0.9.3", hooks = [
      { id = "ruff", args = ["--fix", "--show-fixes", "--exit-non-zero-on-fix"] }
  ] },
  { repo = "https://github.com/psf/black", rev = "25.1.0", hooks = [
      { id = "black", args = ["--preview"] }
  ] },
  { repo = "https://github.com/pre-commit/mirrors-mypy", rev = "v1.14.1", hooks = [
      { id = "mypy", args = ["--strict", "--ignore-missing-imports"] }
  ] },
  { repo = "https://github.com/returntocorp/semgrep", rev = "v1.106.0", hooks = [
      { id = "semgrep", args = ["--config=auto", "--error"] }
  ] },
  { repo = "https://github.com/PyCQA/bandit", rev = "1.8.2", hooks = [
      { id = "bandit", args = ["-r", "-ll"] }
  ] },
  { repo = "https://github.com/pre-commit/mirrors-isort", rev = "v5.10.1", hooks = [
      { id = "isort", args = ["--profile=black"] }
  ] },
  { repo = "https://github.com/commitizen-tools/commitizen", rev = "v4.1.1", hooks = [
      { id = "commitizen", stages = ["commit-msg"] }
  ] },
  { repo = "https://github.com/streetsidesoftware/cspell-cli", rev = "v8.17.1", hooks = [
      { id = "cspell", args = ["--config", ".cspell.json"] }
  ] },
  { repo = "https://github.com/pre-commit/mirrors-prettier", rev = "v4.0.0-alpha.8", hooks = [
      { id = "prettier", args = ["--write"] }
  ] },
  { repo = "local", hooks = [
      { id = "fix-toml", name = "Fix TOML", entry = "python fix_toml.py", language = "system", files = "\\.toml$", types = ["toml"] }
  ] }
]
